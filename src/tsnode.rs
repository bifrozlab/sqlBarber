const SEEDS: &'static [u32] = &[1066526760, 625862921, 698639425, 794495935, 178355431, 146192528, 45833257, 716909132];
pub const RAW_TYPE: u32 = 86473090071; // "_raw_type"
pub const ALTER_TABLE: u32 = 29319356849; // "alter_table"
pub const ALTER_TABLE_ADD_COLUMN: u32 = 91795486884; // "alter_table_add_column"
pub const ALTER_TABLE_ADD_CONSTRAINT: u32 = 64325589014; // "alter_table_add_constraint"
pub const ALTER_TABLE_ALTER_CONSTRAINT: u32 = 79660574543; // "alter_table_alter_constraint"
pub const ALTER_TABLE_CMD: u32 = 77206086225; // "alter_table_cmd"
pub const ALTER_TABLE_CMDS: u32 = 12008514165; // "alter_table_cmds"
pub const ALTER_TABLE_DROP_CONSTRAINT: u32 = 78593637020; // "alter_table_drop_constraint"
pub const ARRAY_ELEM: u32 = 35163805005; // "array_elem"
pub const ARRAY_EXPR: u32 = 83944531554; // "array_expr"
pub const ARRAY_TYPE: u32 = 58967023640; // "array_type"
pub const AT_EXPR: u32 = 82303085767; // "at_expr"
pub const BINARY_EXPR: u32 = 109072104482; // "binary_expr"
pub const BOOLEAN_LITERAL: u32 = 82595630556; // "boolean_literal"
pub const BYTES_LITERAL: u32 = 50041840426; // "bytes_literal"
pub const CASE_EXPR: u32 = 109883414029; // "case_expr"
pub const CAST_EXPR: u32 = 130160076506; // "cast_expr"
pub const COL_CONSTRAINT: u32 = 46784737518; // "col_constraint"
pub const COL_QUAL_LIST: u32 = 18602693573; // "col_qual_list"
pub const COLLATE_CLAUSE: u32 = 38963979079; // "collate_clause"
pub const COLLATION_EXPR: u32 = 39193908298; // "collation_expr"
pub const COLUMN_ATTRIBUTE: u32 = 5460597002; // "column_attribute"
pub const COLUMN_COMPRESS: u32 = 66608021742; // "column_compress"
pub const COLUMN_DEF: u32 = 59295264623; // "column_def"
pub const COLUMN_INFO: u32 = 123278662948; // "column_info"
pub const COLUMN_POSITION: u32 = 75165485798; // "column_position"
pub const COLUMN_SCHEMA: u32 = 62095791620; // "column_schema"
pub const COLUMN_STORAGE: u32 = 73729989614; // "column_storage"
pub const COMMENT: u32 = 49797465731; // "comment"
pub const COMMON_TABLE_EXPR: u32 = 8609776630; // "common_table_expr"
pub const COMPARE_EXPR: u32 = 50774944807; // "compare_expr"
pub const CONSTRAINT_ENFORCEMENT: u32 = 44534911868; // "constraint_enforcement"
pub const CREATE_GENERIC_OPTIONS: u32 = 65072164741; // "create_generic_options"
pub const CURRENT_TIME_EXPR: u32 = 106338516713; // "current_time_expr"
pub const CYCLE_CLAUSE: u32 = 102395208702; // "cycle_clause"
pub const DATE_OR_TIME_LITERAL: u32 = 66040755884; // "date_or_time_literal"
pub const DOCUMENT_OR_CONTENT: u32 = 77397831546; // "document_or_content"
pub const DOT_IDENTIFIER: u32 = 36106116158; // "dot_identifier"
pub const DOT_STAR: u32 = 131231431603; // "dot_star"
pub const ESCAPE_SEQUENCE: u32 = 84856992985; // "escape_sequence"
pub const EXPLAIN: u32 = 64922670760; // "explain"
pub const EXPR: u32 = 65633706043; // "expr"
pub const EXPR_LIST: u32 = 8426068887; // "expr_list"
pub const EXTRACT_EXPR: u32 = 40113889574; // "extract_expr"
pub const FILL_USING_EXPR: u32 = 48572951491; // "fill_using_expr"
pub const FILTER_CLAUSE: u32 = 77978217878; // "filter_clause"
pub const FLOAT_LITERAL: u32 = 99359223345; // "float_literal"
pub const FOR_LOCKING_CLAUSE: u32 = 74227457039; // "for_locking_clause"
pub const FOR_LOCKING_ITEM: u32 = 11874487892; // "for_locking_item"
pub const FOR_LOCKING_STRENGTH: u32 = 90865090466; // "for_locking_strength"
pub const FOREIGN_KEY_ACTIONS: u32 = 105973110969; // "foreign_key_actions"
pub const FOREIGN_KEY_MATCH: u32 = 110832273400; // "foreign_key_match"
pub const FOREIGN_KEY_ON_DELETE: u32 = 100887354819; // "foreign_key_on_delete"
pub const FOREIGN_KEY_ON_UPDATE: u32 = 34706437067; // "foreign_key_on_update"
pub const FOREIGN_KEY_REF: u32 = 71697217755; // "foreign_key_ref"
pub const FROM_LIST: u32 = 5643310743; // "from_list"
pub const FUNC_ALIAS_CLAUSE: u32 = 9326949494; // "func_alias_clause"
pub const FUNC_APP: u32 = 106594348274; // "func_app"
pub const FUNC_ARG_LIST: u32 = 17127693128; // "func_arg_list"
pub const FUNC_ARG_VARIADIC: u32 = 35218437050; // "func_arg_variadic"
pub const FUNC_EXPR: u32 = 20744737194; // "func_expr"
pub const FUNC_EXPR_COMMON_SUBEXPR: u32 = 59017346200; // "func_expr_common_subexpr"
pub const FUNC_EXPR_WINDOWLESS: u32 = 67236659359; // "func_expr_windowless"
pub const FUNC_TABLE: u32 = 63804074350; // "func_table"
pub const GENERAL_IDENTIFIER: u32 = 83926352884; // "general_identifier"
pub const GENERIC_OPTION: u32 = 71970405110; // "generic_option"
pub const GROUP_BY_LIST: u32 = 20053159721; // "group_by_list"
pub const GROUPING_SETS_CLAUSE: u32 = 26680244504; // "grouping_sets_clause"
pub const HAVING_CLAUSE: u32 = 101859572238; // "having_clause"
pub const HINT: u32 = 77564684582; // "hint"
pub const IDENTIFIER: u32 = 64131598818; // "identifier"
pub const IDENTIFIER_LIST: u32 = 89828252146; // "identifier_list"
pub const IF_EXISTS: u32 = 2507334068; // "if_exists"
pub const IF_NOT_EXISTS: u32 = 37894907631; // "if_not_exists"
pub const INTEGER_LITERAL: u32 = 70909978631; // "integer_literal"
pub const INTERVAL_END: u32 = 14732596780; // "interval_end"
pub const INTERVAL_LITERAL: u32 = 74117325984; // "interval_literal"
pub const INTERVAL_SECOND: u32 = 114035338861; // "interval_second"
pub const INTO_CLAUSE: u32 = 1542198985; // "into_clause"
pub const INTO_TEMP_TABLE: u32 = 55762209873; // "into_temp_table"
pub const JOIN_SPEC: u32 = 27213503492; // "join_spec"
pub const JOIN_TYPE: u32 = 25206584681; // "join_type"
pub const JOINED_TABLE: u32 = 65850833200; // "joined_table"
pub const LIMIT_CLAUSE: u32 = 45771781460; // "limit_clause"
pub const LOCKED_RELS_LIST: u32 = 122303678049; // "locked_rels_list"
pub const MULTISTMT: u32 = 28145470887; // "multistmt"
pub const NAMED_PARAMETER_EXPR: u32 = 98896597153; // "named_parameter_expr"
pub const NORMALIZE_EXPR: u32 = 46939954415; // "normalize_expr"
pub const NOWAIT_OR_SKIP: u32 = 45236883432; // "nowait_or_skip"
pub const NULL: u32 = 35274052448; // "null"
pub const NULLS_HANDLING: u32 = 63501301132; // "nulls_handling"
pub const NULLS_ORDER: u32 = 107561414165; // "nulls_order"
pub const NUMERIC_LITERAL: u32 = 83910715187; // "numeric_literal"
pub const OFFSET_CLAUSE: u32 = 70184700338; // "offset_clause"
pub const OPTIONS_ENTRY: u32 = 36231123691; // "options_entry"
pub const OPTIONS_LIST: u32 = 77009699910; // "options_list"
pub const ORDER_BY_CLAUSE: u32 = 21050273982; // "order_by_clause"
pub const ORDER_BY_ITEM: u32 = 31996527165; // "order_by_item"
pub const ORDER_BY_LIST: u32 = 17011947772; // "order_by_list"
pub const ORDER_DIRECTION: u32 = 67940078069; // "order_direction"
pub const OVERLAY_EXPR: u32 = 39494219615; // "overlay_expr"
pub const OVERLAY_LIST: u32 = 86563980351; // "overlay_list"
pub const PARAMETER_EXPR: u32 = 68820449160; // "parameter_expr"
pub const PAREN_EXPR: u32 = 52151024072; // "paren_expr"
pub const PARENLESS_FUNC_EXPR: u32 = 127712308615; // "parenless_func_expr"
pub const PATH_EXPR: u32 = 116895613809; // "path_expr"
pub const PATH_EXPR_LIST_OPT_PARENS: u32 = 104718137498; // "path_expr_list_opt_parens"
pub const PG_CAST_EXPR: u32 = 67295430257; // "pg_cast_expr"
pub const PIVOT_CLAUSE: u32 = 63778113769; // "pivot_clause"
pub const PIVOT_LIST: u32 = 34780219379; // "pivot_list"
pub const PIVOT_VALUE: u32 = 129174269453; // "pivot_value"
pub const POSITION_EXPR: u32 = 19928352774; // "position_expr"
pub const PRIMARY_KEY_ELEM: u32 = 24645582784; // "primary_key_elem"
pub const PRIMARY_KEY_ELEM_LIST: u32 = 124950484508; // "primary_key_elem_list"
pub const PRIMARY_KEY_SPEC: u32 = 32731683294; // "primary_key_spec"
pub const ROWSFROM_ITEM: u32 = 11070557140; // "rowsfrom_item"
pub const SAMPLE_CLAUSE: u32 = 101584683068; // "sample_clause"
pub const SEARCH_CLAUSE: u32 = 36327153979; // "search_clause"
pub const SELECT: u32 = 98404208866; // "select"
pub const SELECT_FETCH_FIRST_VAL: u32 = 67868704660; // "select_fetch_first_val"
pub const SELECT_IN_PARENS: u32 = 29942921477; // "select_in_parens"
pub const SELECT_ITEM: u32 = 24415377401; // "select_item"
pub const SELECT_LIST: u32 = 128336331218; // "select_list"
pub const SELECT_SET: u32 = 56557513773; // "select_set"
pub const SELECT_SPEC: u32 = 7418775519; // "select_spec"
pub const SET_OPERATOR: u32 = 50909090196; // "set_operator"
pub const SET_QUANTIFIER: u32 = 80590826864; // "set_quantifier"
pub const STAR: u32 = 97599601398; // "star"
pub const STAR_REPLACE_ITEM: u32 = 111024900922; // "star_replace_item"
pub const STAR_REPLACE_LIST: u32 = 128622636639; // "star_replace_list"
pub const STMT: u32 = 37163532408; // "stmt"
pub const STRING_LITERAL: u32 = 76214145273; // "string_literal"
pub const STRUCT_FIELD: u32 = 51120871327; // "struct_field"
pub const STRUCT_TYPE: u32 = 3267474959; // "struct_type"
pub const SUBQUERY_EXPR: u32 = 131328085107; // "subquery_expr"
pub const SUBQUERY_TABLE: u32 = 110086145479; // "subquery_table"
pub const SUBSTR_EXPR: u32 = 132256429050; // "substr_expr"
pub const SUBSTR_LIST: u32 = 116201487299; // "substr_list"
pub const SYSTEM_VARIABLE_EXPR: u32 = 75310495514; // "system_variable_expr"
pub const TABLE_CONSTRAINT_SPEC: u32 = 197941347; // "table_constraint_spec"
pub const TABLE_FUNC_ELEMENT: u32 = 63661962037; // "table_func_element"
pub const TABLE_FUNC_ELEMENT_LIST: u32 = 89492333349; // "table_func_element_list"
pub const TABLE_REF: u32 = 5731231383; // "table_ref"
pub const TREAT_EXPR: u32 = 87555677118; // "treat_expr"
pub const TRIM_EXPR: u32 = 27234737324; // "trim_expr"
pub const TRIM_LIST: u32 = 33559363009; // "trim_list"
pub const TYPE: u32 = 59989673471; // "type"
pub const TYPE_PARAM: u32 = 35206320874; // "type_param"
pub const UNARY_EXPR: u32 = 67123477724; // "unary_expr"
pub const UNICODE_NORMAL_FORM: u32 = 33212929182; // "unicode_normal_form"
pub const UNKNOW: u32 = 37143879363; // "unknow"
pub const UNPIVOT_CLAUSE: u32 = 66206080997; // "unpivot_clause"
pub const UNPIVOT_IN_ITEM: u32 = 90525857625; // "unpivot_in_item"
pub const UNPIVOT_IN_LIST: u32 = 92472653576; // "unpivot_in_list"
pub const UNPIVOT_NULLS_FILTER: u32 = 92365248747; // "unpivot_nulls_filter"
pub const UTILITY_OPTION_ARG: u32 = 39052801928; // "utility_option_arg"
pub const UTILITY_OPTION_ITEM: u32 = 103858038311; // "utility_option_item"
pub const UTILITY_OPTION_LIST: u32 = 1616900108; // "utility_option_list"
pub const UTILITY_OPTION_NAME: u32 = 136065563899; // "utility_option_name"
pub const VALUES_CLAUSE: u32 = 101105294489; // "values_clause"
pub const WINDOW_CLAUSE: u32 = 97711010230; // "window_clause"
pub const WINDOW_DEFINITION: u32 = 127159934911; // "window_definition"
pub const WINDOW_EXCLUSION_CLAUSE: u32 = 120685928516; // "window_exclusion_clause"
pub const WINDOW_FRAME_BOUND: u32 = 100823983441; // "window_frame_bound"
pub const WINDOW_FRAME_CLAUSE: u32 = 123191600488; // "window_frame_clause"
pub const WINDOW_SPEC: u32 = 28352455178; // "window_spec"
pub const WITH_LIST: u32 = 127203344860; // "with_list"
pub const WITHIN_GROUP_CLAUSE: u32 = 13813775089; // "within_group_clause"
pub const XML_ATTRIBUTE_EL: u32 = 7884735467; // "xml_attribute_el"
pub const XML_ATTRIBUTE_LIST: u32 = 60278533722; // "xml_attribute_list"
pub const XML_ATTRIBUTES: u32 = 77598003734; // "xml_attributes"
pub const XML_EXPR: u32 = 1040979622; // "xml_expr"
pub const XML_NAMESPACE_ELEMENT: u32 = 99944318314; // "xml_namespace_element"
pub const XML_PASSING_MECH: u32 = 116735417378; // "xml_passing_mech"
pub const XML_ROOT_STANDALONE: u32 = 53027341172; // "xml_root_standalone"
pub const XML_ROOT_VERSION: u32 = 72362924763; // "xml_root_version"
pub const XML_WHITESPACE_OPTION: u32 = 85015560553; // "xml_whitespace_option"
pub const XMLEXISTS_ARG: u32 = 50757462053; // "xmlexists_arg"
pub const XMLEXISTS_ARGUMENT: u32 = 79172663896; // "xmlexists_argument"
pub const XMLTABLE: u32 = 1697375575; // "xmltable"
pub const XMLTABLE_COLUMN_ELEMENT: u32 = 24385054595; // "xmltable_column_element"
pub const XMLTABLE_COLUMN_LIST: u32 = 15805629896; // "xmltable_column_list"
pub const XMLTABLE_COLUMN_OPTION_ELEMENT: u32 = 126329414198; // "xmltable_column_option_element"
pub const XMLTABLE_COLUMN_OPTION_LIST: u32 = 101605271636; // "xmltable_column_option_list"
pub fn ts_kind_hash(s: &str) -> u32 {
    s.bytes()
    .map(Into::<u32>::into)
    .enumerate()
    .fold(23571637u32, |hash, (i, c)| hash ^ (c * SEEDS[i%8]))
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn it_outputs_correct_hash_table_ref() {
        let hash = ts_kind_hash("table_ref");
        assert_eq!(hash, TABLE_REF);
    }

    #[test]
    fn it_outputs_correct_hash_from_list() {
        let hash = ts_kind_hash("from_list");
        assert_eq!(hash, FROM_LIST);
    }

    #[test]
    fn it_outputs_correct_hash_func_expr() {
        let hash = ts_kind_hash("func_expr");
        assert_eq!(hash, FUNC_EXPR);
    }

    #[test]
    fn it_outputs_correct_hash_identifier() {
        let hash = ts_kind_hash("identifier");
        assert_eq!(hash, IDENTIFIER);
    }

    #[test]
    fn it_outputs_correct_hash_multistmt() {
        let hash = ts_kind_hash("multistmt");
        assert_eq!(hash, MULTISTMT);
    }
}
