pub enum Expr {
    Literal,
    ColumnName(Option<String>, String),
    // Unary Box<Expr>ession
    Absolute(Box<Expr>),
    Plus(Box<Expr>),
    Minus(Box<Expr>),
    Not(Box<Expr>),
    BitwiseNot(Box<Expr>),
    SquareRoot(Box<Expr>),
    CubeRoot(Box<Expr>),
    PostfixFactorial(Box<Expr>),
    PrefixFactorial(Box<Expr>),
    // Binary Box<Expr>ession
    Add(Box<Expr>, Box<Expr>),
    Subtract(Box<Expr>, Box<Expr>),
    Multiply(Box<Expr>, Box<Expr>),
    Divide(Box<Expr>, Box<Expr>),
    Modulo(Box<Expr>, Box<Expr>),
    Concat(Box<Expr>, Box<Expr>),
    Greater(Box<Expr>, Box<Expr>),
    Lesser(Box<Expr>, Box<Expr>),
    GreaterEqual(Box<Expr>, Box<Expr>),
    LesserEqual(Box<Expr>, Box<Expr>),
    Equal(Box<Expr>, Box<Expr>),
    NotEqual(Box<Expr>, Box<Expr>),
    And(Box<Expr>, Box<Expr>),
    Or(Box<Expr>, Box<Expr>),
    BitwiseOr(Box<Expr>, Box<Expr>),
    BitwiseAnd(Box<Expr>, Box<Expr>),
    BitwiseXor(Box<Expr>, Box<Expr>),
    RightShift(Box<Expr>, Box<Expr>),
    LeftShift(Box<Expr>, Box<Expr>),
    Like(Box<Expr>, Box<Expr>),
    ILike(Box<Expr>, Box<Expr>),
    NotLike(Box<Expr>, Box<Expr>),
    NotILike(Box<Expr>, Box<Expr>),
}

pub enum Literal {
    SmallInteger(i16),
    TinyInteger(i8),
    Integer(i32),
    BigInteger(i64),
    Float(f32),
    Double(f64),
}
