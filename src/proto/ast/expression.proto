syntax = "proto3";

option go_package = "sql-barber";

package sql;

/* SQL Expressions */

message Expr {
  bool is_expression = 1;
  oneof expr_type
}

message Literal {
  TypeProto type = 1;
  string value = 2;
}

enum BinaryOperator {
  OPERATOR_ADD = 0;
  OPERATOR_SUBTRACT = 1;
  OPERATOR_MULTIPLY = 2;
  OPERATOR_DIVIDE = 3;
  OPERATOR_MODULO = 4;
  OPERATOR_STRING_CONCAT = 5;
  OPERATOR_GREATER = 6;
  OPERATOR_LESSER = 7;
  OPERATOR_GREATER_EQUAL = 8;
  OPERATOR_LESSER_EQUAL = 9;
  OPERATOR_SPACESHIP = 10;
  OPERATOR_EQUAL = 11;
  OPERATOR_NOT_EQUAL = 12;
  OPERATOR_AND = 13;
  OPERATOR_OR = 14;
  OPERATOR_XOR = 15;
  OPERATOR_BITWISE_OR = 16;
  OPERATOR_BITWISE_AND = 17;
  OPERATOR_BITWISE_XOR = 18;
  OPERATOR_SHIFT_LEFT = 19;
  OPERATOR_SHIFT_RIGHT = 20;
  OPERATOR_REGEX_MATCH = 21;
  OPERATOR_REGEX_IMATCH = 22;
  OPERATOR_REGEX_NOT_MATCH = 23;
  OPERATOR_REGEX_NOT_IMATCH = 24;
  OPERATOR_PG_CUSTOM = 25; // PostgreSQL-specific custom operator.
}

message BinaryExpr {
  BinaryOperator op = 1;
  Expr left = 2;
  Expr right = 3;
}

enum UnaryOperator {
  OPERATOR_PLUS = 0;
  OPERATOR_MINUS = 1;
  OPERATOR_NOT = 2;
  OPERATOR_BITWISE_NOT = 3;
  OPERATOR_SQUARE_ROOT = 4;
  OPERATOR_CUBE_ROOT = 5;
  OPERATOR_POSTFIX_FACTORIAL = 6;
  OPERATOR_PREFIX_FACTORIAL = 7;
  OPERATOR_ABS = 8;
}

message UnaryExpr {
  UnaryOperator op = 1;
  Expr expr = 2;
}
